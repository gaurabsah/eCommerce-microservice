spring.application.name=order-service

#server.port=8084
#DB configuration
spring.datasource.url=jdbc:postgresql://postgres-order:5432/orderDB
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update

#config-server configuration
#spring.config.import= optional:configserver:http://localhost:9090

# Circuit Breaker for cart service
resilience4j.circuitbreaker.instances.cartServiceCB.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.cartServiceCB.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.cartServiceCB.sliding-window-size=5

# Retry for cart service
resilience4j.retry.instances.cartServiceRetry.max-attempts=3
resilience4j.retry.instances.cartServiceRetry.wait-duration=2s

#kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.order.event.OrderPlacedEvent

